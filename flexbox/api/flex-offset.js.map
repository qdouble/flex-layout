{"version":3,"sources":["flexbox/api/flex-offset.ts"],"names":[],"mappings":"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","file":"flex-offset.js","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Renderer,\n  SimpleChanges,\n} from '@angular/core';\nimport {MediaQueryActivation} from '../media-query/media-query-activation';\nimport {MediaQueryAdapter} from '../media-query/media-query-adapter';\nimport {MediaQueryChanges, OnMediaQueryChanges} from '../media-query/media-query-changes';\nimport {BaseFxDirective} from './base';\n\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive({selector: '[fx-flex-offset]'})\nexport class FlexOffsetDirective extends BaseFxDirective implements OnInit, OnChanges,\n                                                                       OnMediaQueryChanges {\n  /**\n   * MediaQuery Activation Tracker\n   */\n  private _mqActivation: MediaQueryActivation;\n\n  @Input('fx-flex-offset') offset: string|number;\n\n  // *******************************************************\n  // Optional input variations to support mediaQuery triggers\n  // *******************************************************\n\n  @Input('fx-flex-offset.xs') offsetXs: string|number;\n  @Input('fx-flex-offset.gt-xs') offsetGtXs: string|number;\n  @Input('fx-flex-offset.sm') offsetSm: string|number;\n  @Input('fx-flex-offset.gt-sm') offsetGtSm: string|number;\n  @Input('fx-flex-offset.md') offsetMd: string|number;\n  @Input('fx-flex-offset.gt-md') offsetGtMd: string|number;\n  @Input('fx-flex-offset.lg') offsetLg: string|number;\n  @Input('fx-flex-offset.gt-lg') offsetGtLg: string|number;\n  @Input('fx-flex-offset.xl') offsetXl: string|number;\n\n  constructor(private _mqa: MediaQueryAdapter, elRef: ElementRef, renderer: Renderer) {\n    super(elRef, renderer);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    let activated = this._mqActivation;\n    let activationChange = activated && changes[activated.activatedInputKey] != null;\n    if (changes['offset'] != null || activationChange) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._mqActivation = this._mqa.attach(this, 'offset', 0);\n  }\n\n  /**\n   *  Special mql callback used by MediaQueryActivation when a mql event occurs\n   */\n  onMediaQueryChanges(changes: MediaQueryChanges) {\n    this._updateWithValue(changes.current.value);\n  }\n\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n\n  _updateWithValue(value?: string|number) {\n    value = value || this.offset || 0;\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  _buildCSS(offset) {\n    let isPercent = String(offset).indexOf('%') > -1;\n    let isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(offset))\n      offset = offset + '%';\n\n    return {'margin-left': `${offset}`};\n  }\n}\n"]}