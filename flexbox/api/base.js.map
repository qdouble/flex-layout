{"version":3,"sources":["flexbox/api/base.ts"],"names":[],"mappings":"OACO,EAAC,gBAAgB,EAAC,MAAM,2BAA2B;AAS1D,iEAAiE;AACjE;IACE,yBAAoB,WAAuB,EAAU,SAAmB;QAApD,gBAAW,GAAX,WAAW,CAAY;QAAU,cAAS,GAAT,SAAS,CAAU;IAAG,CAAC;IAE5E,mFAAmF;IACzE,8CAAoB,GAA9B,UAA+B,KAAsB,EAAE,KAAqB;QAC1E,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAE7C,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;YACtB,KAAK,GAAG,MAAM,CAAC;QACjB,CAAC;QAED,MAAM,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAEjC,mDAAmD;QACnD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5D,CAAC;IACH,CAAC;IACH,sBAAC;AAAD,CApBA,AAoBC,IAAA","file":"base.js","sourcesContent":["import {ElementRef, Renderer} from '@angular/core';\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\n\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5}).\n */\nexport type StyleDefinition = string|{[property: string]: string|number};\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective {\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer) {}\n\n  /** Applies styles given via string pair or object map to the directive element. */\n  protected _applyStyleToElement(style: StyleDefinition, value?: string|number) {\n    let styles = {};\n    let element = this._elementRef.nativeElement;\n\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n\n    styles = applyCssPrefixes(style);\n\n    // Iterate all properties in hashMap and set styles\n    for (let key in styles) {\n      this._renderer.setElementStyle(element, key, styles[key]);\n    }\n  }\n}\n"]}