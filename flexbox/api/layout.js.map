{"version":3,"sources":["flexbox/api/layout.ts"],"names":[],"mappings":"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","file":"layout.js","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Renderer,\n  SimpleChanges,\n} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {MediaQueryActivation} from '../media-query/media-query-activation';\nimport {MediaQueryAdapter} from '../media-query/media-query-adapter';\nimport {MediaQueryChanges, OnMediaQueryChanges} from '../media-query/media-query-changes';\nimport {BaseFxDirective} from './base';\n\n\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive({selector: '[fx-layout], [fx-layout.md]'})\nexport class LayoutDirective extends BaseFxDirective implements OnInit, OnChanges,\n                                                                   OnMediaQueryChanges {\n  /**\n   * MediaQuery Activation Tracker\n   */\n  private _mqActivation: MediaQueryActivation;\n\n  /**\n   * Create Observable for nested/child 'flex' directives. This allows\n   * child flex directives to subscribe/listen for flexbox direction changes.\n   */\n  private _announcer: BehaviorSubject<string> = new BehaviorSubject<string>(this.layout);\n\n  /**\n   * Publish observer to enabled nested, dependent directives to listen\n   * to parent \"layout\" direction changes\n   */\n  public layout$: Observable<string> = this._announcer.asObservable();\n\n  /**\n   * Default layout property with default direction value\n   */\n  @Input('fx-layout') layout = 'row';\n\n  // *******************************************************\n  // Optional input variations to support mediaQuery triggers\n  // *******************************************************\n\n  @Input('fx-layout.xs') layoutXs;\n  @Input('fx-layout.gt-xs') layoutGtXs;\n  @Input('fx-layout.sm') layoutSm;\n  @Input('fx-layout.gt-sm') layoutGtSm;\n  @Input('fx-layout.md') layoutMd;\n  @Input('fx-layout.gt-md') layoutGtMd;\n  @Input('fx-layout.lg') layoutLg;\n  @Input('fx-layout.gt-lg') layoutGtLg;\n  @Input('fx-layout.xl') layoutXl;\n\n  /**\n   *\n   */\n  constructor(private _mqa: MediaQueryAdapter, elRef: ElementRef, renderer: Renderer) {\n    super(elRef, renderer);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fx-layout')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    let activated = this._mqActivation;\n    let activationChange = activated && changes[activated.activatedInputKey] != null;\n\n    if (changes['layout'] != null || activationChange) {\n      this._updateWithDirection();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._mqActivation = this._mqa.attach(this, 'layout', 'row');\n    this._updateWithDirection();\n  }\n\n  /**\n   *  Special mql callback used by MediaQueryActivation when a mql event occurs\n   */\n  onMediaQueryChanges(changes: MediaQueryChanges) {\n    this._updateWithDirection(changes.current.value);\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Validate the direction value and then update the host's inline flexbox styles\n   *\n   * @todo - update all child containers to have \"box-sizing: border-box\"\n   *         This way any padding or border specified on the child elements are\n   *         laid out and drawn inside that element's specified width and height.\n   *\n   */\n  _updateWithDirection(direction?: string) {\n    direction = direction || this.layout || 'row';\n    if (this._mqActivation) {\n      direction = this._mqActivation.activatedInput;\n    }\n    direction = this._validateValue(direction);\n\n    // Update styles and announce to subscribers the *new* direction\n    this._applyStyleToElement(this._buildCSS(direction));\n    this._announcer.next(direction);\n  }\n\n\n  /**\n   * Build the CSS that should be assigned to the element instance\n   * BUG:\n   *\n   *   1) min-height on a column flex container wonâ€™t apply to its flex item children in IE 10-11.\n   *      Use height instead if possible; height : <xxx>vh;\n   */\n  _buildCSS(value) {\n    return {'display': 'flex', 'box-sizing': 'border-box', 'flex-direction': value};\n  }\n\n  /**\n   * Validate the value to be one of the acceptable value options\n   * Use default fallback of \"row\"\n   */\n  _validateValue(value) {\n    value = value ? value.toLowerCase() : '';\n    return LAYOUT_VALUES.find(x => x === value) ? value : LAYOUT_VALUES[0];  // \"row\"\n  }\n}\n\n\n\n\n\n\n// ************************************************************\n// Private static variables\n// ************************************************************\n\nconst [ROW, COLUMN, ROW_REVERSE, COLUMN_REVERSE] = LAYOUT_VALUES;\n"]}