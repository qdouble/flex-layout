{"version":3,"sources":["flexbox/api/layout-wrap.ts"],"names":[],"mappings":"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","file":"layout-wrap.js","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer,\n  SimpleChanges,\n} from '@angular/core';\nimport {MediaQueryActivation} from '../media-query/media-query-activation';\nimport {MediaQueryAdapter} from '../media-query/media-query-adapter';\nimport {MediaQueryChanges, OnMediaQueryChanges} from '../media-query/media-query-changes';\nimport {BaseFxDirective} from './base';\n\n\n/**\n * 'layout-wrap' flexbox styling directive\n * Defines wrapping of child elements in layout container\n * Optional values: reverse, wrap-reverse, none, nowrap, wrap (default)]\n * @see https://css-tricks.com/almanac/properties/f/flex-wrap/\n */\n@Directive({selector: '[fx-layout-wrap]'})\nexport class LayoutWrapDirective extends BaseFxDirective implements OnInit, OnChanges,\n                                                                       OnMediaQueryChanges,\n                                                                       OnDestroy {\n  /**\n   * MediaQuery Activation Tracker\n   */\n  private _mqActivation: MediaQueryActivation;\n\n  @Input('fx-layout-wrap') wrap: string = 'wrap';\n\n  // *******************************************************\n  // Optional input variations to support mediaQuery triggers\n  // *******************************************************\n\n  @Input('fx-layout-wrap.xs') wrapXs;\n  @Input('fx-layout-wrap.gt-xs') wrapGtXs;\n  @Input('fx-layout-wrap.sm') wrapSm;\n  @Input('fx-layout-wrap.gt-sm') wrapGtSm;\n  @Input('fx-layout-wrap.md') wrapMd;\n  @Input('fx-layout-wrap.gt-md') wrapGtMd;\n  @Input('fx-layout-wrap.lg') wrapLg;\n  @Input('fx-layout-wrap.gt-lg') wrapGtLg;\n  @Input('fx-layout-wrap.xl') wrapXl;\n\n  constructor(private _mqa: MediaQueryAdapter, elRef: ElementRef, renderer: Renderer) {\n    super(elRef, renderer)\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    let activated = this._mqActivation;\n    let activationChange = activated && changes[activated.activatedInputKey] != null;\n\n    if (changes['wrap'] != null || activationChange) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._mqActivation = this._mqa.attach(this, 'wrap', 'wrap');\n    this._updateWithValue();\n  }\n\n  /**\n   *  Special mql callback used by MediaQueryActivation when a mql event occurs\n   */\n  onMediaQueryChanges(changes: MediaQueryChanges) {\n    this._updateWithValue(changes.current.value);\n  }\n\n  ngOnDestroy() {}\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  _updateWithValue(value?: string) {\n    value = value || this.wrap || 'wrap';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n    value = this._validateValue(value);\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n\n  /**\n   * Build the CSS that should be assigned to the element instance\n   */\n  _buildCSS(value) {\n    return { 'flex-wrap': value };\n  }\n\n  /**\n   * Convert layout-wrap=\"<value>\" to expected flex-wrap style\n   */\n  _validateValue(value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to \"wrap\"\n      default:\n        value = 'wrap';\n        break;\n    }\n    return value;\n  }\n}\n"]}