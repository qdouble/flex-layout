{"version":3,"sources":["flexbox/api/flex.ts"],"names":[],"mappings":"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","file":"flex.js","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {extendObject} from '../../utils/object-extend';\nimport {MediaQueryActivation} from '../media-query/media-query-activation';\nimport {MediaQueryAdapter} from '../media-query/media-query-adapter';\nimport {MediaQueryChanges, OnMediaQueryChanges} from '../media-query/media-query-changes';\nimport {BaseFxDirective} from './base';\nimport {LayoutDirective} from './layout';\nimport {LayoutWrapDirective} from './layout-wrap';\n\n\n/** Built-in aliases for different flex-basis values. */\nexport type FlexBasisAlias = 'grow' | 'initial' | 'auto' | 'none' | 'nogrow' | 'noshrink';\n\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Correspondds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive({\n  selector: '[fx-flex]',\n})\nexport class FlexDirective extends BaseFxDirective\n    implements OnInit, OnChanges, OnMediaQueryChanges, OnDestroy {\n\n  /** MediaQuery Activation Tracker */\n  private _mqActivation: MediaQueryActivation;\n\n  /** The flex-direction of this element's flex container. Defaults to 'row'. */\n  private _layout = 'row';\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  private _layoutWatcher: Subscription;\n\n  @Input('fx-flex') flex: string = '';\n  @Input('fx-shrink') shrink: number = 1;\n  @Input('fx-grow') grow: number = 1;\n\n  // Optional input variations to support mediaQuery triggers\n  @Input('fx-flex.xs') flexXs;\n  @Input('fx-flex.gt-xs') flexGtXs;\n  @Input('fx-flex.sm') flexSm;\n  @Input('fx-flex.gt-sm') flexGtSm;\n  @Input('fx-flex.md') flexMd;\n  @Input('fx-flex.gt-md') flexGtMd;\n  @Input('fx-flex.lg') flexLg;\n  @Input('fx-flex.gt-lg') flexGtLg;\n  @Input('fx-flex.xl') flexXl;\n\n\n  // Explicitly @SkipSelf on LayoutDirective and LayoutWrapDirective because we want the\n  // parent flex container for this flex item.\n  constructor(\n      elRef: ElementRef,\n      renderer: Renderer,\n      private _mediaQueryAdapter: MediaQueryAdapter,\n      @Optional() @SkipSelf() private _container: LayoutDirective,\n      @Optional() @SkipSelf() private _wrap: LayoutWrapDirective) {\n    super(elRef, renderer);\n\n    // If this flex item is inside of a flex container marked with\n    if (_container) {\n      // Subscribe to layout immediate parent direction changes\n      this._layoutWatcher = _container.layout$.subscribe((direction) => this._onLayoutChange(direction));\n    }\n  }\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    let activated = this._mqActivation;\n    let activationChange = activated && changes[activated.activatedInputKey] != null;\n\n    if (changes['flex'] != null || activationChange) {\n      this._onLayoutChange(this._layout);\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._mqActivation = this._mediaQueryAdapter.attach(this, 'flex', '');\n    this._onLayoutChange();\n  }\n\n  /**\n   *  Special mql callback used by MediaQueryActivation when a mql event occurs\n   */\n  onMediaQueryChanges(changes: MediaQueryChanges) {\n    this._updateStyle(changes.current.value);\n  }\n\n  ngOnDestroy() {\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout;\n    this._updateStyle();\n  }\n\n  _updateStyle(value?: string) {\n    let flexBasis = value || this.flex || '';\n    if (this._mqActivation) {\n      flexBasis = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._validateValue(this.grow, this.shrink, flexBasis));\n  }\n\n  /**\n   * Validate the value to be one of the acceptable value options\n   * Use default fallback of \"row\"\n   */\n  _validateValue(grow: number, shrink: number, basis: string|number|FlexBasisAlias) {\n    let css;\n    let direction = (this._layout === 'column') || (this._layout == 'column-reverse') ?\n        'column' :\n        'row';\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    // Use `null` to clear existing styles.\n    let clearStyles = {\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n    switch (basis || '') {\n      case '':\n        css = extendObject(clearStyles, {'flex': '1'});\n        break;\n      case 'grow':\n        css = extendObject(clearStyles, {'flex': '1 1 100%'});\n        break;\n      case 'initial':\n        css = extendObject(clearStyles, {'flex': '0 1 auto'});\n        break;  // default\n      case 'auto':\n        css = extendObject(clearStyles, {'flex': '1 1 auto'});\n        break;\n      case 'none':\n        css = extendObject(clearStyles, {'flex': '0 0 auto'});\n        break;\n      case 'nogrow':\n        css = extendObject(clearStyles, {'flex': '0 1 auto'});\n        break;\n      case 'noshrink':\n        css = extendObject(clearStyles, {'flex': '1 0 auto'});\n        break;\n\n      default:\n        let isPercent = String(basis).indexOf('%') > -1;\n        let isPx = String(basis).indexOf('px') > -1;\n\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isPx && !isPercent && !isNaN(basis as any))\n          basis = basis + '%';\n        if (basis === '0px')\n          basis = '0%';\n\n        // Set max-width = basis if using layout-wrap\n        // @see https://github.com/philipwalton/flexbugs#11-min-and-max-size-declarations-are-ignored-when-wrappifl-flex-items\n\n        css = extendObject(clearStyles, {\n          'flex': `${grow} ${shrink} ${(isPx || this._wrap) ? basis : '100%'}`,  // fix issue #5345\n        });\n        break;\n    }\n\n    let max = (direction === 'row') ? 'max-width' : 'max-height';\n    let min = (direction === 'row') ? 'min-width' : 'min-height';\n\n    css[min] = (basis == '0%') ? 0 : null;\n    css[max] = (basis == '0%') ? 0 : basis;\n\n    return extendObject(css, {'box-sizing': 'border-box'});\n  }\n}\n"]}